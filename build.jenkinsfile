pipeline {
    agent any

    environment {
        IMG_NAME = "polybot:${BUILD_NUMBER}"
        DOCKER_REGISTRY = "eldiabloj/polybot"
    }

    parameters {
        string(name: 'IMAGE_TAG', defaultValue: '', description: 'eldiabloj/polybot:latest')
    }

    stages {
        stage('Build Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-jenkinse', usernameVariable: 'USERNAME', passwordVariable: 'USERPASS')]) {
                    script {
                        try {
                            // Change directory to where Dockerfile is located
                            dir('polybot') {
                                // Login to Docker registry
                                bat "docker login -u ${USERNAME} -p ${USERPASS}"
                                // Build Docker image
                                bat "docker build -t ${IMG_NAME} ."
                            }
                        } catch (Exception e) {
                            echo "Docker build failed"
                            error "Build failed: ${e.message}"
                        }
                    }
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    // Tag and push Docker image to registry
                    bat "docker tag ${IMG_NAME} ${DOCKER_REGISTRY}"
                    bat "docker push ${DOCKER_REGISTRY}"
                }
            }
        }

        stage('Deploy polybot') {
            steps {
                script {
                    echo "Deploying to Kubernetes cluster..."
                    echo "Using Docker image: ${params.IMAGE_TAG}"
                    echo "kubectl set image deployment/polybot polybot=${params.IMAGE_TAG}"
                }
            }
        }
    }
}





//  biuld vir2
//  pipeline {
//      agent any
//      environment {
//         IMG_NAME = "polybot:${BUILD_NUMBER}"
//         DOCKER_REGISTRY = "eldiabloj"  // Adjust this based on your Docker registry URL
//     }
//     stages {
//         stage('Build Docker Image') {
//             steps {
//                 withCredentials([usernamePassword(credentialsId: 'jenkins.docker', usernameVariable: 'USERNAME', passwordVariable: 'USERPASS')]) {
//                     script {
//                         try {
//                             Change directory to where Dockerfile is located
//                             dir('polybot') {
//                                 Login to Docker registry
//                                 bat "docker login -u ${USERNAME} -p ${USERPASS}"
//                                 Build Docker image
//                                 bat "docker build -t ${IMG_NAME} ."
//                             }
//                         } catch (Exception e) {
//                             echo "Docker build failed"
//                             error "Build failed: ${e.message}"
//                         }
//                     }
//                 }
//             }
//         }
//         stage('Push Docker Image') {
//             steps {
//                 script {
//                     Tag and push Docker image to registry
//                     bat "docker tag ${IMG_NAME} ${DOCKER_REGISTRY}/${IMG_NAME}"
//                     bat "docker push ${DOCKER_REGISTRY}/${IMG_NAME}"
//                 }
//             }
//         }
//         stage('Trigger Deploy') {
//             steps {
//                 script {
//                     Trigger deployment job with the newly built image tag
//                     build job: 'deploy_polybot', wait: false, parameters: [
//                         string(name: 'IMAGE_TAG', value: "${DOCKER_REGISTRY}/${IMG_NAME}")
//                     ]
//                 }
//             }
//         }
//     } //stages

// }
// deploy v1
// pipeline {
//   agent any
//     parameters {
//         string(name: 'IMAGE_TAG', defaultValue: '', description: 'eldiabloj/polybot:50')
//     }
//     stages {
//         stage('deploy.jenkinsfile') {
//             steps {
//                 script {
//                     bat '''
//                     echo "Deploying to Kubernetes cluster..."
//                     echo "Using Docker image: ${IMAGE_TAG}"
//                     echo "kubectl set image deployment/polybot polybot=${IMAGE_TAG}"
//                     echo i deed it
//                     '''
//                 }
//             }
//         }
//     }
// }
//
//
// pipeline {
//   agent {
//   docker {
//        image 'eldiabloj/dockerfile_agent:latest'
//        args  '-v "//var/run/docker.sock:/var/run/docker.sock'
//    }
//   }
//    environment {
//        IMG_NAME = "polybot:${BUILD_NUMBER}"
//    }
//    stages {
//        stage('Build Docker Image') {
//            steps {
//                withCredentials([usernamePassword(credentialsId: 'jenkins.docker', usernameVariable: 'USERNAME', passwordVariable: 'USERPASS')]) {
//                    script {
//                       try {
//                            bat '''
//                            cd polybot
//                            docker login -u %USERNAME% -p %USERPASS%
//                            docker build -t %IMG_NAME% .
//                            '''
//                        } catch (Exception e) {
//                            echo "Docker build failed"
//                            error "Build failed: ${e.message}"
//                        }
//                        bat '''
//                        docker tag %IMG_NAME% eldiabloj/%IMG_NAME%
//                        docker push eldiabloj/%IMG_NAME%
//                        '''
//                    }
//                }
//            }
//        }
//        stage('Trigger Deploy') {
//            steps {
//                script {
//                    build job: 'deploy_polybot', wait: false, parameters: [
//                        string(name: 'IMAGE_TAG', value: "eldiabloj/polybot:${BUILD_NUMBER}")
//                    ]
//                }
//            }
//        }
//    }
//}




// vir 2
// pipeline {
//     agent any
//     environment {
//         IMG_NAME = "polybot:${BUILD_NUMBER}"
//     }
//     stages {
//         stage('Build docker image') {
//             steps {
//                 withCredentials([usernamePassword(credentialsId: 'jenkins.docker', usernameVariable: 'USERNAME', passwordVariable: 'USERPASS')]) {
//                     script {
//                         try {
//                             bat '''
//                             cd polybot
//                             docker login -u %USERNAME% -p %USERPASS%
//                             docker build -t %IMG_NAME% .
//                             '''
//                         } catch (Exception e) {
//                             echo "Docker build failed"
//                             error "Build failed: ${e.message}"
//                         }
//                         bat '''
//                         docker tag %IMG_NAME% eldiabloj/%IMG_NAME%
//                         docker push eldiabloj/%IMG_NAME%
//                         '''
//                     }
//                 }
//             }
//         }
//
//         stage('Trigger Deploy') {
//             steps {
//                 script {
//                     build job: 'deploy_polybot', wait: false, parameters: [
//                         string(name: 'IMAGE_NAME', value: "eldiabloj/polybot:${BUILD_NUMBER}")
//                     ]
//                 }
//             }
//         }
//     }
// }




// vir 1
// pipeline {
//     agent any
//     environment {
//         IMG_NAME = "polybot:${BUILD_NUMBER}"
//     }
//     stages {
//         stage('Build docker image') {
//             steps {
//                 withCredentials([usernamePassword(credentialsId: 'jenkins.docker', usernameVariable: 'USERNAME', passwordVariable: 'USERPASS')]) {
//                     script {
//                         try {
//                             bat '''
//                             cd polybot
//                             docker login -u %USERNAME% -p %USERPASS%
//                             docker build -t %IMG_NAME% .
//                             '''
//                         } catch (Exception e) {
//                             echo "Docker build failed"
//                             error "Build failed: ${e.message}"
//                         }
//                         bat '''
//                         docker tag %IMG_NAME% eldiabloj/%IMG_NAME%
//                         docker push eldiabloj/%IMG_NAME%
//                         '''
//                     }
//                 }
//             }
//         }
//     }
// }
//
// stage('Trigger Deploy') {
//     steps {
//         build job: 'deploy_polybot', wait: false, parameters: [
//             string(name: 'eldiabloj/polybot:${BUILD_NUMBER}', value: "polybot")
//         ]
//     }
// }
//
//



